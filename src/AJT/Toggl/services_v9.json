{
  "name": "Toggl",
  "apiVersion": "v9",
  "description": "Toggl API v9",
  "baseUri": "https://api.track.toggl.com/api/v9/",
  "operations": {
    "CreateClient": {
      "httpMethod": "POST",
      "uri": "workspaces/{workspace_id}/clients",
      "summary": "Create Client",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace"
				},
        "client": {
          "location": "json",
          "type": "object",
          "description": "Client Object",
          "properties": {
            "name": {
              "type": "string",
              "required": true,
              "description": " The name of the client (string, required, unique in workspace)"
            },
            "notes": {
              "type": "string",
              "required": false,
              "description": "Notes for the client (string, not required)"
            },
            "hrate": {
              "type": "numeric",
              "required": false,
              "description": "The hourly rate for this client (float, not required, available only for pro workspaces)"
            },
            "cur": {
              "type": "string",
              "required": false,
              "description": "The name of the client's currency (string, not required, available only for pro workspaces)"
            }
          }
        }
      }
    },
    "GetClient": {
      "httpMethod": "GET",
      "uri": "workspaces/{workspace_id}/clients/{client_id}",
      "summary": "Load client from workspace.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace"
				},
        "client_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the client"
        }
			}
    },
    "UpdateClient": {
      "httpMethod": "PUT",
      "uri": "workspaces/{workspace_id}/clients/{client_id}",
      "summary": "Update workspace client.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace"
				},
        "client_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the client"
        },
        "client": {
          "location": "json",
          "type": "object",
          "description": "Client Object",
          "properties": {
            "name": {
              "type": "string",
              "required": false,
              "description": "The name of the client (string, not required, unique in workspace)"
            },
            "notes": {
              "type": "string",
              "required": false,
              "description": "Notes for the client (string, not required)"
            },
            "hrate": {
              "type": "numeric",
              "required": false,
              "description": "The hourly rate for this client (float, not required, available only for pro workspaces)"
            },
            "cur": {
              "type": "string",
              "required": false,
              "description": "The name of the client's currency (string, not required, available only for pro workspaces)"
            }
          }
        }
      }
    },
    "DeleteClient": {
      "httpMethod": "DELETE",
      "uri": "workspaces/{workspace_id}/clients/{client_id}",
      "summary": "Delete workspace client.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace\n"
				},
        "client_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the client\n"
        }
      }
    },
    "GetClients": {
      "httpMethod": "GET",
      "uri": "me/clients",
      "summary": "Get clients visible to user",
      "responseModel": "getResponse"
    },
		"ArchiveClient": {
			"httpMethod": "POST",
			"uri": "workspaces/{workspace_id}/clients/{client_id}/archive",
			"summary": "Archives a workspace client and related projects. Only for premium workspaces.",
			"responseModel": "getResponse",
			"parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace"
				},
				"client_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the client"
				}
			}
		},
		"RestoreClient": {
			"httpMethod": "POST",
			"uri": "workspaces/{workspace_id}/clients/{client_id}/restore ",
			"summary": "Restores client and all related or specified projects from the given workspace.",
			"responseModel": "getResponse",
			"parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace"
				},
				"client_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the client"
				},
				"projects": {
					"required": false,
					"location": "json",
					"type": "array",
					"description": "Array of project IDs to restore.",
					"items": {
						"type": "integer"
					}
				},
				"restore_all_projects": {
					"required": false,
					"location": "json",
					"type": "boolean",
					"description": "Restore all projects."
				}
			}
		},
    "GetClientProjects": {
			"_todo": "This is defined in the v8 docs https://github.com/toggl/toggl_api_docs/blob/master/chapters/clients.md#get-client-projects but not in the v9 docs or the migration guide.",
      "httpMethod": "GET",
      "uri": "clients/{id}/projects",
      "summary": "Get client projects",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "description": "Client ID",
          "required": true,
          "type": "integer"
        },
        "active": {
          "location": "query",
          "description": "Active (true, false, both)",
          "type": "string",
          "default": "true"
        }
      }
    },
    "CreateProject": {
      "httpMethod": "POST",
      "uri": "workspaces/{workspace_id}/projects",
      "summary": "Create project for given workspace.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace\n"
				},
        "project": {
          "location": "json",
          "type": "object",
          "description": "Project Object",
          "properties": {
						"name": {
							"type": "string",
							"required": true,
							"description": "The name of the project (string, required, unique for client and workspace)"
						},
						"end_date": {
							"type": "string",
							"required": true,
							"description": "End date of a project timeframe"
						},
						"start_date": {
							"type": "string",
							"required": true,
							"description": "Start date of a project timeframe"
						},
						"active": {
							"type": "boolean",
							"required": false,
							"default": true,
							"description": "whether the project is archived or not (boolean, by default true)"
						},
						"auto_estimates": {
							"type": "boolean",
							"required": false,
							"description": "Whether estimates are based on task hours, optional, premium feature"
						},
						"billable": {
							"type": "boolean",
							"required": false,
							"default": true,
							"description": "Whether the project is set as billable, optional, premium feature"
						},
						"client_id": {
							"type": "integer",
							"required": false,
							"description": "Client ID (integer, not required)"
						},
            "cid": {
              "type": "integer",
              "required": false,
              "description": "Client ID (legacy)"
            },
						"color": {
							"type": "string",
							"required": false,
							"description": "Project color"
						},
						"currency": {
							"type": "string",
							"required": false,
							"description": "Project currency, optional, premium feature"
						},
						"estimated_hours": {
							"type": "integer",
							"required": false,
							"description": "Estimated hours, optional, premium feature"
						},
						"fixed_fee": {
							"type": "number",
							"required": false,
							"description": "Project fixed fee, optional, premium feature"
						},
						"is_private": {
							"type": "boolean",
							"required": false,
							"default": true,
							"description": "whether project is accessible for only project users or for all workspace users (boolean, default true)"
						},
						"rate": {
							"type": "number",
							"required": false,
							"description": "Hourly rate, optional, premium feature"
						},
						"rate_change_mode": {
							"type": "string",
							"required": false,
							"description": "Rate change mode, optional, premium feature. Can be \"start-today\", \"override-current\", \"override-all\""
						},
            "template": {
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "whether the project can be used as a template (boolean, not required)"
            },
            "template_id": {
              "type": "integer",
              "required": false,
              "description": "id of the template project used on current project's creation"
            }
          }
        }
      }
    },
    "GetProjects": {
      "httpMethod": "GET",
      "uri": "workspaces/{workspace_id}/projects",
      "summary": "Get projects",
      "responseModel": "getResponse",
      "parameters": {
        "workspace_id": {
          "location": "uri",
          "description": "Workspace ID",
          "required": true,
          "type": "integer"
        },
        "active": {
          "location": "query",
          "type": "string",
					"required": false,
          "description": "possible values true/false/both. By default true. If false, only archived projects are returned.",
          "default": "true"
        },
				"since": {
					"location": "query",
					"type": "integer",
					"required": false,
					"description": "Retrieve projects created/modified/deleted since this date using UNIX timestamp."
				},
				"billable": {
					"location": "query",
					"type": "boolean",
					"required": false
				},
				"user_ids": {
					"location": "query",
					"type": "array",
					"items": {
						"type": "integer"
					},
					"required": false
				},
				"client_ids": {
					"location": "query",
					"type": "array",
					"items": {
						"type": "integer"
					},
					"required": false
				},
				"group_ids": {
					"location": "query",
					"type": "array",
					"items": {
						"type": "integer"
					},
					"required": false
				},
				"name": {
					"location": "string",
					"type": "string",
					"required": true
				},
				"page": {
					"location": "query",
					"type": "integer",
					"required": true
				},
				"sort_field": {
					"location": "query",
					"type": "string",
					"required": true
				},
				"sort_order": {
					"location": "query",
					"type": "string",
					"required": true
				},
				"only_templates": {
					"location": "query",
					"type": "boolean",
					"required": true,
					"default": false
				},
				"per_page": {
					"location": "query",
					"type": "integer",
					"required": false,
					"description": "Number of records per page."
				}
      }
    },
    "GetProject": {
      "httpMethod": "GET",
      "uri": "workspaces/{workspace_id}/projects/{project_id}",
      "summary": "Get Project details",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace"
				},
        "project_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the project"
        }
      }
    },
    "GetProjectTasks": {
      "httpMethod": "GET",
      "uri": "workspaces/{workspace_id}/projects/{project_id}/tasks",
      "summary": "Get project tasks for given workspace.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Numeric ID of the workspace"
				},
        "project_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the project"
        }
      }
    },
    "UpdateProject": {
      "httpMethod": "PUT",
      "uri": "workspaces/{workspace_id}/projects/{project_id}",
      "summary": "Update project for given workspace.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Project ID"
				},
        "project_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Project ID"
        },
        "project": {
          "location": "json",
          "type": "object",
          "description": "Project Object",
          "properties": {
						"location": "json",
						"type": "object",
						"description": "Project Object",
						"properties": {
							"name": {
								"type": "string",
								"required": true,
								"description": "The name of the project (string, required, unique for client and workspace)"
							},
							"end_date": {
								"type": "string",
								"required": true,
								"description": "End date of a project timeframe"
							},
							"start_date": {
								"type": "string",
								"required": true,
								"description": "Start date of a project timeframe"
							},
							"active": {
								"type": "boolean",
								"required": false,
								"default": true,
								"description": "whether the project is archived or not (boolean, by default true)"
							},
							"auto_estimates": {
								"type": "boolean",
								"required": false,
								"description": "Whether estimates are based on task hours, optional, premium feature"
							},
							"billable": {
								"type": "boolean",
								"required": false,
								"default": true,
								"description": "Whether the project is set as billable, optional, premium feature"
							},
							"client_id": {
								"type": "integer",
								"required": false,
								"description": "Client ID (integer, not required)"
							},
							"cid": {
								"type": "integer",
								"required": false,
								"description": "Client ID (legacy)"
							},
							"color": {
								"type": "string",
								"required": false,
								"description": "Project color"
							},
							"currency": {
								"type": "string",
								"required": false,
								"description": "Project currency, optional, premium feature"
							},
							"estimated_hours": {
								"type": "integer",
								"required": false,
								"description": "Estimated hours, optional, premium feature"
							},
							"fixed_fee": {
								"type": "number",
								"required": false,
								"description": "Project fixed fee, optional, premium feature"
							},
							"is_private": {
								"type": "boolean",
								"required": false,
								"default": true,
								"description": "whether project is accessible for only project users or for all workspace users (boolean, default true)"
							},
							"rate": {
								"type": "number",
								"required": false,
								"description": "Hourly rate, optional, premium feature"
							},
							"rate_change_mode": {
								"type": "string",
								"required": false,
								"description": "Rate change mode, optional, premium feature. Can be \"start-today\", \"override-current\", \"override-all\""
							},
							"template": {
								"type": "boolean",
								"required": false,
								"default": false,
								"description": "whether the project can be used as a template (boolean, not required)"
							},
							"template_id": {
								"type": "integer",
								"required": false,
								"description": "id of the template project used on current project's creation"
							}
						}
					}
        }
      }
    },
    "DeleteProject": {
      "httpMethod": "DELETE",
      "uri": "workspaces/{workspace_id}/projects/{project_id}",
      "summary": "Delete project for given workspace.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"type": "integer",
					"required": true,
					"description": "Project ID"
				},
        "project_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Project ID"
        }
      }
    },
    "DeleteProjects": {
			"_todo": "This is defined in the v8 docs https://github.com/toggl/toggl_api_docs/blob/master/chapters/projects.md#delete-multiple-projects but not in the v9 docs or the migration guide.",
			"httpMethod": "DELETE",
      "uri": "projects/{ids}",
      "summary": "Delete multiple Project",
      "responseModel": "getResponse",
      "parameters": {
        "ids": {
          "location": "uri",
          "type": "string",
          "required": true,
          "description": "Comma separated list of Project IDs"
        }
      }
    },
    "GetProjectUsers": {
      "httpMethod": "GET",
      "uri": "workspaces/{workspace_id}/project_users",
      "summary": "List all projects users for a given workspace.",
      "responseModel": "getResponse",
      "parameters": {
        "workspace_id": {
          "location": "uri",
          "description": "Numeric ID of the workspace",
          "required": true,
          "type": "integer"
        },
				"project_ids": {
					"location": "query",
					"type": "string",
					"description": "Numeric IDs of projects, comma-separated",
					"required": false
				},
				"with_group_members": {
					"location": "query",
					"type": "boolean",
					"description": "Include group members",
					"required": false
				}
      }
    },
    "CreateProjectUser": {
      "httpMethod": "POST",
      "uri": "workspaces/{workspace_id}/project_users",
      "summary": "Include a project user for a given workspace.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"description": "Numeric ID of the workspace",
					"required": true,
					"type": "integer"
				},
        "project_user": {
          "location": "json",
          "type": "object",
          "description": "Project User Object",
          "properties": {
            "pid": {
              "type": "integer",
              "required": true,
              "description": "project ID (integer, required)"
            },
            "uid": {
              "type": "integer",
              "required": true,
              "description": "user ID, who is added to the project (integer, required)"
            },
            "manager": {
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "admin rights for this project (boolean, default false)"
            },
            "rate": {
              "type": "numeric",
              "required": false,
              "description": "hourly rate for the project user (float, not-required, only for pro workspaces) in the currency of the project's client or in workspace default currency."
            },
            "fullname": {
              "type": "string",
              "required": false,
              "description": "fullname: full name of the user, who is added to the project"
            }
          }
        }
      }
    },
    "UpdateProjectUser": {
      "httpMethod": "PUT",
      "uri": "workspaces/{workspace_id}/project_users/{project_user_id}",
      "summary": "Update Project User",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"description": "Numeric ID of the workspace",
					"required": true,
					"type": "integer"
				},
        "project_user_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the project user"
        },
        "project_user": {
          "location": "json",
          "type": "object",
          "description": "Project User Object",
          "properties": {
            "manager": {
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "admin rights for this project (boolean, default false)"
            },
            "rate": {
              "type": "numeric",
              "required": false,
              "description": "hourly rate for the project user (float, not-required, only for pro workspaces) in the currency of the project's client or in workspace default currency."
            },
            "fullname": {
              "type": "string",
              "required": false,
              "description": "fullname: full name of the user, who is added to the project"
            }
          }
        }
      }
    },
    "DeleteProjectUser": {
      "httpMethod": "DELETE",
      "uri": "workspaces/{workspace_id}/project_users/{project_user_id}",
      "summary": "Delete Project User",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"description": "Numeric ID of the workspace",
					"required": true,
					"type": "integer"
				},
        "project_user_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the project user\n"
        }
      }
    },
    "CreateProjectUsers": {
			"_todo": "This is defined in the v8 docs https://github.com/toggl/toggl_api_docs/blob/master/chapters/project_users.md#create-multiple-project-users-for-single-project but not in the v9 docs or the migration guide.",
			"httpMethod": "POST",
      "uri": "project_users",
      "summary": "Create multiple Project Users",
      "responseModel": "getResponse",
      "parameters": {
        "project_user": {
          "location": "json",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Project User Object",
            "properties": {
              "pid": {
                "type": "integer",
                "required": true,
                "description": "project ID (integer, required)"
              },
              "uid": {
                "type": "integer",
                "required": true,
                "description": "user ID, who is added to the project (integer, required)"
              },
              "wid": {
                "type": "integer",
                "required": false,
                "description": "workspace ID, where the project belongs to (integer, not-required, project's workspace id is used)"
              },
              "manager": {
                "type": "boolean",
                "required": false,
                "default": false,
                "description": "admin rights for this project (boolean, default false)"
              },
              "rate": {
                "type": "numeric",
                "required": false,
                "description": "hourly rate for the project user (float, not-required, only for pro workspaces) in the currency of the project's client or in workspace default currency."
              },
              "fullname": {
                "type": "string",
                "required": false,
                "description": "fullname: full name of the user, who is added to the project"
              }
            }
          }
        }
      }
    },
    "UpdateProjectUsers": {
      "httpMethod": "PATCH",
      "uri": "workspaces/{workspace_id}/project_users/{project_user_ids}\n\n",
      "summary": "Patch a list of project users for a given workspace.",
      "responseModel": "getResponse",
      "parameters": {
				"workspace_id": {
					"location": "uri",
					"description": "Numeric ID of the workspace",
					"required": true,
					"type": "integer"
				},
        "project_user_ids": {
          "location": "uri",
          "type": "string",
          "required": true,
          "description": "Comma separated list of Project User IDs"
        },
        "project_user": {
          "location": "json",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Project User Object",
            "properties": {
              "manager": {
                "type": "boolean",
                "required": false,
                "default": false,
                "description": "admin rights for this project (boolean, default false)"
              },
              "rate": {
                "type": "numeric",
                "required": false,
                "description": "hourly rate for the project user (float, not-required, only for pro workspaces) in the currency of the project's client or in workspace default currency."
              },
              "fullname": {
                "type": "string",
                "required": false,
                "description": "fullname: full name of the user, who is added to the project"
              }
            }
          }
        }
      }
    },
    "DeleteProjectUsers": {
			"_todo": "This is defined in the v8 docs https://github.com/toggl/toggl_api_docs/blob/master/chapters/project_users.md#delete-multiple-project-users but not in the v9 docs or the migration guide.",
			"httpMethod": "DELETE",
      "uri": "project_users/{ids}",
      "summary": "Delete multiple Project Users",
      "responseModel": "getResponse",
      "parameters": {
        "ids": {
          "location": "uri",
          "type": "string",
          "required": true,
          "description": "Comma separated list of Project User IDs"
        }
      }
    },
    "CreateTag": {
      "httpMethod": "POST",
      "uri": "tags",
      "summary": "Create Tag",
      "responseModel": "getResponse",
      "parameters": {
        "tag": {
          "location": "json",
          "type": "object",
          "description": "Tag Object",
          "properties": {
            "name": {
              "type": "string",
              "required": true,
              "description": "The name of the tag (string, required, unique in workspace)"
            },
            "wid": {
              "type": "integer",
              "required": true,
              "description": "workspace ID, where the tag will be used (integer, required)"
            }
          }
        }
      }
    },
    "UpdateTag": {
      "httpMethod": "PUT",
      "uri": "tags/{id}",
      "summary": "Update Tag",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Tag ID"
        },
        "tag": {
          "location": "json",
          "type": "object",
          "description": "Tag Object",
          "properties": {
            "name": {
              "type": "string",
              "required": true,
              "description": "The name of the tag (string, required, unique in workspace)"
            }
          }
        }
      }
    },
    "DeleteTag": {
      "httpMethod": "DELETE",
      "uri": "tags/{id}",
      "summary": "Delete Tag",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Tag ID"
        }
      }
    },
    "CreateTask": {
      "httpMethod": "POST",
      "uri": "tasks",
      "summary": "Create Task",
      "responseModel": "getResponse",
      "parameters": {
        "task": {
          "location": "json",
          "type": "object",
          "description": "Task Object",
          "properties": {
            "name": {
              "type": "string",
              "required": true,
              "description": "The name of the task (string, required, unique in project)"
            },
            "pid": {
              "type": "integer",
              "required": true,
              "description": "project ID for the task (integer, required)"
            },
            "wid": {
              "type": "integer",
              "required": false,
              "description": "workspace ID, where the task will be saved (integer, project's workspace id is used when not supplied)"
            },
            "uid": {
              "type": "integer",
              "required": false,
              "description": "user ID, to whom the task is assigned to (integer, not required)"
            },
            "estimated_seconds": {
              "type": "integer",
              "required": false,
              "description": "estimated duration of task in seconds (integer, not required)"
            },
            "active": {
              "type": "boolean",
              "required": false,
              "default": true,
              "description": "whether the task is done or not (boolean, by default true)"
            }
          }
        }
      }
    },
    "GetTask": {
      "httpMethod": "GET",
      "uri": "tasks/{id}",
      "summary": "Get Task",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Task ID"
        }
      }
    },
    "UpdateTask": {
      "httpMethod": "PUT",
      "uri": "tasks/{id}",
      "summary": "Update Task",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Task ID"
        },
        "task": {
          "location": "json",
          "type": "object",
          "description": "Task Object",
          "properties": {
            "name": {
              "type": "string",
              "required": false,
              "description": "The name of the task (string, not required, unique in project)"
            },
            "uid": {
              "type": "integer",
              "required": false,
              "description": "user ID, to whom the task is assigned to (integer, not required)"
            },
            "estimated_seconds": {
              "type": "integer",
              "required": false,
              "description": "estimated duration of task in seconds (integer, not required)"
            },
            "active": {
              "type": "boolean",
              "required": false,
              "default": true,
              "description": "whether the task is done or not (boolean, by default true)"
            }
          }
        }
      }
    },
    "DeleteTask": {
      "httpMethod": "DELETE",
      "uri": "tasks/{id}",
      "summary": "Delete Task",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Task ID"
        }
      }
    },
    "UpdateTasks": {
      "httpMethod": "PUT",
      "uri": "tasks/{ids}",
      "summary": "Update Tasks",
      "responseModel": "getResponse",
      "parameters": {
        "ids": {
          "location": "uri",
          "type": "string",
          "required": true,
          "description": "Comma-separated list of Task IDs"
        },
        "task": {
          "location": "json",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Task Object",
            "properties": {
              "name": {
                "type": "string",
                "required": false,
                "description": "The name of the task (string, not required, unique in project)"
              },
              "uid": {
                "type": "integer",
                "required": false,
                "description": "user ID, to whom the task is assigned to (integer, not required)"
              },
              "estimated_seconds": {
                "type": "integer",
                "required": false,
                "description": "estimated duration of task in seconds (integer, not required)"
              },
              "active": {
                "type": "boolean",
                "required": false,
                "default": true,
                "description": "whether the task is done or not (boolean, by default true)"
              }
            }
          }
        }
      }
    },
    "DeleteTasks": {
      "httpMethod": "DELETE",
      "uri": "tasks/{ids}",
      "summary": "Delete Tasks",
      "responseModel": "getResponse",
      "parameters": {
        "ids": {
          "location": "uri",
          "type": "string",
          "required": true,
          "description": "Comma-separated list of Task IDs"
        }
      }
    },
    "CreateTimeEntry": {
      "httpMethod": "POST",
      "uri": "time_entries",
      "summary": "Create Time Entry",
      "responseModel": "getResponse",
      "parameters": {
        "time_entry": {
          "location": "json",
          "type": "object",
          "description": "Time Entry Object",
          "properties": {
            "description": {
              "type": "string",
              "required": false,
              "description": "(string, not required)"
            },
            "wid": {
              "type": "integer",
              "required": false,
              "description": "workspace ID (integer, required if pid or tid not supplied)"
            },
            "pid": {
              "type": "integer",
              "required": false,
              "description": "pid: project ID (integer, not required)"
            },
            "tid": {
              "type": "integer",
              "required": false,
              "description": "tid: task ID (integer, not required)"
            },
            "billable": {
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "(boolean, not required, default false, available for pro workspaces)"
            },
            "created_with": {
              "type": "string",
              "required": true,
              "description": "the name of your client app (string, required)"
            },
            "tags": {
              "type": "array",
              "required": false,
              "items": {
                "type": "string"
              },
              "description": "a list of tag names (array of strings, not required)"
            },
            "duration": {
              "type": "integer",
              "required": true,
              "description": "duration of time entry (integer, required)"
            },
            "duronly": {
              "type": "boolean",
              "required": false,
              "description": "should Toggl show the start and stop time of this time entry? (boolean, not required)"
            },
            "start": {
              "type": "string",
              "required": true,
              "description": "start of time entry (string, required, ISO 8601 date and time)"
            }
          }
        }
      }
    },
    "StartTimeEntry": {
      "httpMethod": "POST",
      "uri": "time_entries/start",
      "summary": "Start Time Entry",
      "responseModel": "getResponse",
      "parameters": {
        "time_entry": {
          "location": "json",
          "type": "object",
          "description": "Time Entry Object",
          "properties": {
            "description": {
              "type": "string",
              "required": false,
              "description": "(string, not required)"
            },
            "wid": {
              "type": "integer",
              "required": false,
              "description": "workspace ID (integer, required if pid or tid not supplied)"
            },
            "pid": {
              "type": "integer",
              "required": false,
              "description": "pid: project ID (integer, not required)"
            },
            "tid": {
              "type": "integer",
              "required": false,
              "description": "tid: task ID (integer, not required)"
            },
            "billable": {
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "(boolean, not required, default false, available for pro workspaces)"
            },
            "created_with": {
              "type": "string",
              "required": true,
              "description": "the name of your client app (string, required)"
            },
            "tags": {
              "type": "array",
              "required": false,
              "items": {
                "type": "string"
              },
              "description": "a list of tag names (array of strings, not required)"
            },
            "duronly": {
              "type": "boolean",
              "required": false,
              "description": "should Toggl show the start and stop time of this time entry? (boolean, not required)"
            }
          }
        }
      }
    },
    "StopTimeEntry": {
      "httpMethod": "PUT",
      "uri": "time_entries/{id}/stop",
      "summary": "Stop Time Entry",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Time Entry ID"
        }
      }
    },
    "GetTimeEntry": {
      "httpMethod": "GET",
      "uri": "time_entries/{id}",
      "summary": "Get Time Entry",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Time Entry ID"
        }
      }
    },
    "GetCurrentTimeEntry": {
      "httpMethod": "GET",
      "uri": "time_entries/current",
      "summary": "Get Current Time Entry"
    },
    "UpdateTimeEntry": {
      "httpMethod": "PUT",
      "uri": "time_entries/{id}",
      "summary": "Update Time Entry",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Time Entry ID"
        },
        "time_entry": {
          "location": "json",
          "type": "object",
          "description": "Time Entry Object",
          "properties": {
            "description": {
              "type": "string",
              "required": false,
              "description": "(string, not required)"
            },
            "wid": {
              "type": "integer",
              "required": false,
              "description": "workspace ID (integer, required if pid or tid not supplied)"
            },
            "pid": {
              "type": "integer",
              "required": false,
              "description": "pid: project ID (integer, not required)"
            },
            "tid": {
              "type": "integer",
              "required": false,
              "description": "tid: task ID (integer, not required)"
            },
            "billable": {
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "(boolean, not required, default false, available for pro workspaces)"
            },
            "created_with": {
              "type": "string",
              "required": false,
              "description": "the name of your client app (string, not required)"
            },
            "tags": {
              "type": "array",
              "required": false,
              "items": {
                "type": "string"
              },
              "description": "a list of tag names (array of strings, not required)"
            },
            "duration": {
              "type": "integer",
              "required": false,
              "description": "duration of time entry (integer, not required)"
            },
            "duronly": {
              "type": "boolean",
              "required": false,
              "description": "should Toggl show the start and stop time of this time entry? (boolean, not required)"
            },
            "start": {
              "type": "string",
              "required": false,
              "description": "start of time entry (string, not required, ISO 8601 date and time)"
            }
          }
        }
      }
    },
    "DeleteTimeEntry": {
      "httpMethod": "DELETE",
      "uri": "time_entries/{id}",
      "summary": "Delete Time Entry",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Time Entry ID"
        }
      }
    },
    "GetTimeEntries": {
      "httpMethod": "GET",
      "uri": "time_entries",
      "summary": "Get time entries started in a specific time range.If start_date and end_date are not specified, time entries started during the last 9 days are returned.",
      "responseModel": "getResponse",
      "parameters": {
        "start_date": {
          "location": "query",
          "description": "Start date (must be ISO 8601 date and time string)",
          "type": "string"
        },
        "end_date": {
          "location": "query",
          "description": "End date (must be ISO 8601 date and time string)",
          "type": "string"
        }
      }
    },
    "GetCurrentUser": {
      "httpMethod": "GET",
      "uri": "me",
      "summary": "Get Get current user data",
      "responseModel": "getResponse"
    },
    "CreateUser": {
      "httpMethod": "POST",
      "uri": "signups",
      "summary": "Sign up new user",
      "responseModel": "getResponse",
      "parameters": {
        "user": {
          "location": "json",
          "type": "object",
          "description": "User Object",
          "properties": {
            "email": {
              "type": "string",
              "required": true,
              "description": "a valid email for the user whose account is created (string, required)"
            },
            "password": {
              "type": "string",
              "required": true,
              "description": "password at least 6 characters long (string, required)"
            },
            "timezone": {
              "type": "string",
              "required": true,
              "description": "for example 'Etc/UTC' (string, required)"
            },
            "created_with": {
              "type": "string",
              "required": true,
              "description": "in free form, name of the app that signed the user app (string, required)"
            }
          }
        }
      }
    },
    "GetGroups": {
      "httpMethod": "GET",
      "uri": "workspaces/{id}/groups",
      "summary": "Get groups",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "description": "Workspace ID",
          "required": true,
          "type": "integer"
        }
      }
    },
    "GetWorkspaces": {
      "httpMethod": "GET",
      "uri": "workspaces",
      "summary": "Get workspaces",
      "responseModel": "getResponse"
    },
    "GetWorkspaceUsers": {
      "httpMethod": "GET",
      "uri": "workspaces/{id}/users",
      "summary": "Get workspace users",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "description": "Workspace ID",
          "required": true,
          "type": "integer"
        }
      }
    },
    "GetWorkspaceWorkspaceUsers": {
      "httpMethod": "GET",
      "uri": "workspaces/{id}/workspace_users",
      "summary": "Many-to-many middle object containing information about a specific user's access in the specific workspace",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "description": "Workspace ID",
          "required": true,
          "type": "integer"
        }
      }
    },
    "GetWorkspaceClients": {
      "httpMethod": "GET",
      "uri": "workspaces/{id}/clients",
      "summary": "Get workspace clients",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "description": "Workspace ID",
          "required": true,
          "type": "integer"
        }
      }
    },
    "GetWorkspaceProjects": {
      "httpMethod": "GET",
      "uri": "workspaces/{id}/projects",
      "summary": "Get workspace projects",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "description": "Workspace ID",
          "required": true,
          "type": "integer"
        },
        "active": {
          "location": "query",
          "description": "possible values true/false/both. By default true. If false, only archived projects are returned.",
          "type": "string",
          "default": "true"
        },
        "actual_hours": {
          "location": "query",
          "description": "If true, the completed hours per project are returned.",
          "type": "string",
          "default": "false"
        },
        "only_templates": {
          "location": "query",
          "description": "If true, only the project templates are returned.",
          "type": "string",
          "default": "false"
        }
      }
    },
    "GetWorkspaceTags": {
      "httpMethod": "GET",
      "uri": "workspaces/{id}/tags",
      "summary": "Get workspace tags",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "description": "Workspace ID",
          "required": true,
          "type": "integer"
        }
      }
    },
    "GetWorkspaceTasks": {
      "httpMethod": "GET",
      "uri": "workspaces/{id}/tasks",
      "summary": "Get workspace tasks",
      "responseModel": "getResponse",
      "parameters": {
        "id": {
          "location": "uri",
          "description": "Workspace ID",
          "required": true,
          "type": "integer"
        },
        "active": {
          "location": "query",
          "description": "possible values true/false/both. By default true. If false, only done tasks are returned.",
          "type": "string",
          "default": "true"
        }
      }
    },
    "CreateUserInvitation": {
      "httpMethod": "POST",
      "uri": "organizations/{organization_id}/invitations",
      "summary": "Creates a new invitation for the user.",
      "responseModel": "getResponse",
      "parameters": {
        "organization_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the organization."
        },
        "emails": {
          "location": "json",
          "type": "array",
          "required": true,
          "description": "List of valid emails (array, required)",
          "items": {
            "type": "string",
            "required": true,
            "description": "The valid email of user who must be invite to this workspace (string, required)"
          }
        },
        "workspaces": {
          "location": "json",
          "type": "array",
          "required": true,
          "description": "List of valid workspaces (array, required)",
          "items": {
            "type": "object",
            "required": true,
            "description": "The valid workspace of user who must be invite to this workspace (object, required)",
            "properties": {
              "admin": {
                "type": "boolean",
                "required": true,
                "description": "If true, the invited user will be workspace admin (boolean, required)"
              },
              "workspace_id": {
                "type": "integer",
                "required": true,
                "description": "Numeric ID of the workspace (integer, required)"
              }
            }
          }
        }
      }
    },
    "UpdateWorkspaceUser": {
      "httpMethod": "PUT",
      "uri": "workspaces/{workspace_id}/workspace_users/{workspace_user_id}",
      "summary": "Update the data for a workspace_user in a given workspace.",
      "responseModel": "getResponse",
      "parameters": {
        "workspace_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the workspace"
        },
        "workspace_user_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the workspace user"
        },
        "workspace_user": {
          "location": "json",
          "type": "object",
          "description": "Workspace User Object",
          "properties": {
            "admin": {
              "type": "boolean",
              "required": true,
              "description": "if user is workspace admin (boolean)"
            }
          }
        }
      }
    },
    "DeleteWorkspaceUser": {
      "httpMethod": "DELETE",
      "uri": "workspaces/{workspace_id}/workspace_users/{workspace_user_id}",
      "summary": "Removes user from workspace",
      "responseModel": "getResponse",
      "parameters": {
        "workspace_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the workspace."
        },
        "workspace_user_id": {
          "location": "uri",
          "type": "integer",
          "required": true,
          "description": "Numeric ID of the workspace user."
        }
      }
    }
  },
  "models": {
    "getResponse": {
      "type": "object",
      "additionalProperties": {
        "location": "json"
      }
    }
  }
}
